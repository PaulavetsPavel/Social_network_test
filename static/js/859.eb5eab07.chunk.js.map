{"version":3,"file":"static/js/859.eb5eab07.chunk.js","mappings":"gOACA,EAA8B,kCAA9B,EAAwE,4BAAxE,EAA4G,4B,6BCI/FA,EAAc,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAChDC,EAAWH,GAAWC,EAE5B,OAAQ,iBAAKG,UAAS,UAASC,EAAT,YAAkCF,EAClDE,EACA,IAFE,UAGJH,EACAC,IAAY,0BAAQF,QAGbK,EAAQ,SAACC,GACpB,OAAO,SAAET,GAAF,kBAAmBS,GAAnB,cAA2B,oCAAYA,EAAMC,OAAaD,QAGtDE,EAAW,SAACF,GACvB,OAAO,SAAET,GAAF,kBAAmBS,GAAnB,cAA2B,uCAAeA,EAAMC,OAAaD,QAGzDG,EAAc,SAACC,EAAWC,EAAMC,EAAaC,GAAuC,IAA3BP,EAA0B,uDAAlB,GAAIQ,EAAc,uDAAP,GACvF,OAAO,iBAAKX,UAAcC,EAAnB,WACL,SAACW,EAAA,GAAD,QAAOL,UAAcA,EACjBC,KAASA,EACTC,YAAgBA,EAChBI,SAAaH,GACRP,IAAYQ,IAAQ,0BAAQA,S,gFC5BzC,EAA0B,yBAA1B,EAA2D,uBAA3D,EAA4F,yBAA5F,EAAoI,8BAApI,EAAsR,0BCAtR,EAAyB,uBAAzB,EAAuD,qBAAvD,EAAqF,uBAArF,EAAkH,oB,uCCwBlH,EAnBe,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,KAAMM,EAAc,EAAdA,IAClBC,EAAO,YADyB,EAATC,GAE3B,OAAQ,iBAAKhB,UAAcC,EAAnB,WACN,gBAAKD,UAAcC,EAAnB,UACI,gBAAKgB,IAAQH,IAEqB,MAA5BN,EAAMA,EAAKU,OAAS,IACY,MAA5BV,EAAMA,EAAKU,OAAS,GACtBC,EACAC,GACNC,IAAM,WAEZ,SAAC,KAAD,CAASC,GAAOP,EACZf,UAAc,SAACuB,GAAD,OAAaA,EAAQC,SAC7BvB,EACAA,GAHV,SAG2BO,QCpB/B,EAA0B,yBAA1B,EAA4D,wBAA5D,EAA2F,sBCgB3F,EAdgB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,KAAMiB,EAAc,EAAdA,QACvB,OAAQ,iBAAKzB,UAAcC,EAAnB,WACN,iBAAKD,UAAcC,EAAnB,WACE,gBACIgB,IAAM,sGACNI,IAAM,SACV,0BAAQb,QAEV,gBAAKR,UAAcC,EAAnB,SACIwB,Q,mBCXR,EAA8B,gC,oBCKxBC,GAAcC,EAAAA,EAAAA,GAAkB,IAmBtC,GAJ4BC,EAAAA,EAAAA,GAAW,CACrCC,KAAM,iBADoBD,EAbL,SAACzB,GAEtB,OAAQ,kBAAM2B,SAAa3B,EAAM4B,aAC7B/B,UAAcC,EADV,WAEN,SAACW,EAAA,EAAD,CAAOL,UAAcF,EAAAA,GACjBG,KAAO,iBACPK,SAAa,CAAEmB,EAAAA,EAAeN,GAC9BjB,YAAc,mBAElB,kDCsBJ,EAjCgB,SAAC,GAAqC,IAApCwB,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,WAE9BC,EAAgBH,EAAQI,KAAK,SAAAC,GAAC,OAAK,SAAC,EAAD,CACnC9B,KAAS8B,EAAE9B,KACXQ,GAAOsB,EAAEtB,GACTF,IAAQwB,EAAExB,KACFwB,EAAEtB,OAEVuB,EAAiBL,EAASG,KAAK,SAAAG,GAAC,OAAK,SAAC,EAAD,CACrChC,KAASgC,EAAEhC,KACXiB,QAAYe,EAAEf,SACNe,EAAExB,OAOd,OAAQ,iBAAKhB,UAAcC,EAAnB,WACN,gBAAKD,UAAcC,EAAnB,sBACA,0BACE,SAAC,EAAD,CAAqB6B,SARL,SAACW,GACnBN,EAAYM,EAAMC,sBAQlB,gBAAK1C,UAAcC,EAAnB,UACE,gBAAKD,UAAcC,EAAnB,SACImC,OAGN,gBAAKpC,UAAcC,EAAnB,SACIsC,Q,kBCpBR,GAAeI,E,QAAAA,IAASC,EAAAA,GAAkBC,EAAAA,EAAAA,KAPpB,SAACC,GACrB,MAAO,CACLb,QAASa,EAAMC,YAAYd,QAC3BC,SAAUY,EAAMC,YAAYb,YAIoC,CAClEC,WAAAA,EAAAA,IADF,CAEKa,I,wGCXDC,EAA6B,SAACH,GAAD,MAAY,CAC3CI,OAAQJ,EAAMK,KAAKD,SAGRN,EAAmB,SAACQ,GAQ/B,OAAOP,EAAAA,EAAAA,IAASI,EAATJ,EAPiB,SAAC1C,GACvB,OAAKA,EAAM+C,QAGJ,SAACE,GAAD,UAAgBjD,KAFd,SAAC,KAAD,CAAUmB,GAAK,gB,4ECZrB,IAAMU,EAAgB,SAACS,GAC5B,IAAIA,EAGJ,MAAO,qBAGId,EAAmB,SAAC0B,GAAD,OAAe,SAACZ,GAC9C,GAAIA,GAASA,EAAMvB,OAASmC,EAC1B,MAAM,iBAAN,OAAyBA,EAAzB,e","sources":["webpack://social_network_react/./src/Components/Common/FormsControls/FormsControl.module.scss?7b10","Components/Common/FormsControls/FormsControls.jsx","webpack://social_network_react/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://social_network_react/./src/Components/Dialogs/Dialog/Dialog.module.scss?1edf","Components/Dialogs/Dialog/Dialog.jsx","webpack://social_network_react/./src/Components/Dialogs/Message/Message.module.scss?61c0","Components/Dialogs/Message/Message.jsx","webpack://social_network_react/./src/Components/Dialogs/DialogForm/DialogForm.module.scss?6087","Components/Dialogs/DialogForm/DiallogForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","HOC/WithAuthRedirect.js","Utils/Validators/Validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__SvXFt\",\"error\":\"FormsControl_error__snvDT\",\"field\":\"FormsControl_field__Gomwz\"};","import classes from './FormsControl.module.scss'\r\nimport { Field } from 'redux-form'\r\nimport React from 'react'\r\n\r\n\r\nexport const FormControl = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error\r\n  \r\n  return (<div className = { `${ classes.formControl } ${ hasError\r\n      ? classes.error\r\n      : '' }` }>\r\n    { children }\r\n    { hasError && <span>{ error }</span> }</div>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return < FormControl { ...props }><input { ...props.input } { ...props } /></FormControl>\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  return < FormControl { ...props }><textarea { ...props.input } { ...props } /></FormControl>\r\n}\r\n\r\nexport const createField = (component, name, placeholder, validators, props = {}, text = '') => {\r\n  return <div className = { classes.field }>\r\n    <Field component = { component }\r\n        name = { name }\r\n        placeholder = { placeholder }\r\n        validate = { validators }\r\n        { ...props } />{ text && <span>{ text }</span> }\r\n  </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__Qk8T4\",\"title\":\"Dialogs_title__Un0gF\",\"dialogs\":\"Dialogs_dialogs__0myy9\",\"dialogs_list\":\"Dialogs_dialogs_list__wP6R3\",\"dialog\":\"Dialogs_dialog__yfdfb\",\"link\":\"Dialogs_link__OeGR6\",\"link_active\":\"Dialogs_link_active__QFdHa\",\"messages\":\"Dialogs_messages__1ZpPp\",\"message\":\"Dialogs_message__8KVvV\",\"message_autor\":\"Dialogs_message_autor__+WY0h\",\"message_text\":\"Dialogs_message_text__jhP8Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__VpmPp\",\"link\":\"Dialog_link__zRuW3\",\"active\":\"Dialog_active__WKV47\",\"ava\":\"Dialog_ava__+nWeX\"};","import classes from './Dialog.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport AvaFemale from '../../../assets/image/UserFemale.png'\r\nimport AvaMale from '../../../assets/image/UserMale.png'\r\n\r\n\r\nconst Dialog = ({ name, ava, id }) => {\r\n  let path = '/dialogs/' + id\r\n  return (<div className = { classes.dialog }>\r\n    <div className = { classes.ava }>\r\n      { <img src = { ava\r\n          ? ava\r\n          : ((name[ name.length - 1 ] === 'a')\r\n              || (name[ name.length - 1 ] === 'y')\r\n              ? AvaFemale\r\n              : AvaMale) }\r\n          alt = 'ava' /> }\r\n    </div>\r\n    <NavLink to = { path }\r\n        className = { (navData) => navData.isActive\r\n            ? classes.active\r\n            : classes.link }>{ name }</NavLink>\r\n  </div>)\r\n}\r\n\r\nexport default Dialog\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__oOptQ\",\"author\":\"Message_author__NJEEY\",\"text\":\"Message_text__gVNBR\"};","import classes from './Message.module.scss'\r\n\r\n\r\nconst Message = ({ name, message }) => {\r\n  return (<div className = { classes.message }>\r\n    <div className = { classes.author }>\r\n      <img\r\n          src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTb0O3O7fX3kYg5o1eJOwTYIykRvgf_srVNqA&usqp=CAU'\r\n          alt = 'ava' />\r\n      <span>{ name }</span>\r\n    </div>\r\n    <div className = { classes.text }>\r\n      { message }\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default Message\r\n","// extracted by mini-css-extract-plugin\nexport default {\"new_message\":\"DialogForm_new_message__JRkf6\"};","import { Field, reduxForm } from 'redux-form'\r\nimport classes from './DialogForm.module.scss'\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls.jsx'\r\nimport { maxLengthCreator, requiredField } from '../../../Utils/Validators/Validators.js'\r\n\r\n\r\nconst maxLength50 = maxLengthCreator (50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  \r\n  return (<form onSubmit = { props.handleSubmit }\r\n      className = { classes.new_message }>\r\n    <Field component = { Textarea }\r\n        name = 'newMessageBody'\r\n        validate = { [ requiredField, maxLength50 ] }\r\n        placeholder = 'my message...'\r\n    />\r\n    <button>Add message</button>\r\n  </form>)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm ({\r\n  form: 'DialogMessage',\r\n}) (AddMessageForm)\r\n\r\nexport default AddMessageFormRedux","import classes from './Dialogs.module.scss'\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport AddMessageFormRedux from './DialogForm/DiallogForm.jsx'\r\n\r\n\r\nconst Dialogs = ({dialogs, messages,addMessage }) => {\r\n  \r\n  let dialogElement = dialogs.map (d => (<Dialog\r\n      name = { d.name }\r\n      id = { d.id }\r\n      ava = { d.ava }\r\n      key = { d.id } />))\r\n  \r\n  let messageElement = messages.map (m => (<Message\r\n      name = { m.name }\r\n      message = { m.message }\r\n      key = { m.id } />))\r\n  \r\n  let addNewMessage = (value) => {\r\n    addMessage (value.newMessageBody)\r\n    \r\n  }\r\n  \r\n  return (<div className = { classes.wrapper }>\r\n    <div className = { classes.title }>Dialogs</div>\r\n    <div>\r\n      <AddMessageFormRedux onSubmit = { addNewMessage } /></div>\r\n    <div className = { classes.dialogs }>\r\n      <div className = { classes.dialogs_list }>\r\n        { dialogElement }\r\n      </div>\r\n    </div>\r\n    <div className = { classes.messages }>\r\n      { messageElement }\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default Dialogs\r\n","import { addMessage } from '../../Redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect.js'\r\nimport { compose } from 'redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n  }\r\n}\r\n\r\nexport default compose (withAuthRedirect, connect (mapStateToProps, {\r\n  addMessage,\r\n})) (Dialogs)\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  let RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to = '/login' />\r\n    }\r\n    return <Component { ...props } />\r\n  }\r\n  \r\n  return connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n}","export const requiredField = (value) => {\r\n  if (value) {\r\n    return undefined\r\n  }\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) {\r\n    return `Max length is ${ maxLength } symbols`\r\n  }\r\n  return undefined\r\n}"],"names":["FormControl","meta","touched","error","children","hasError","className","classes","Input","props","input","Textarea","createField","component","name","placeholder","validators","text","Field","validate","ava","path","id","src","length","AvaFemale","AvaMale","alt","to","navData","isActive","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","requiredField","dialogs","messages","addMessage","dialogElement","map","d","messageElement","m","value","newMessageBody","compose","withAuthRedirect","connect","state","dialogsPage","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","maxLength"],"sourceRoot":""}