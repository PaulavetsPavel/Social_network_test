{"version":3,"file":"static/js/135.e8330744.chunk.js","mappings":"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","sources":["webpack://social_network_react/./src/Components/Common/FormsControls/FormsControl.module.scss?7b10","Components/Common/FormsControls/FormsControls.jsx","webpack://social_network_react/./src/Components/Profile/Profile.module.scss?dd72","webpack://social_network_react/./src/Components/Profile/ProfileInfo/ProfileInfo.module.scss?c035","webpack://social_network_react/./src/Components/Profile/ProfileInfo/UserProfile/UserProfile.module.scss?e743","webpack://social_network_react/./src/Components/Profile/ProfileInfo/UserProfile/ProfileStatus/ProfileStatus.module.scss?2c83","Components/Profile/ProfileInfo/UserProfile/ProfileStatus/ProfileStatus.jsx","webpack://social_network_react/./src/Components/Profile/ProfileInfo/UserProfile/ProfileData/ProfileData.module.scss?57c7","webpack://social_network_react/./src/Components/Profile/ProfileInfo/UserProfile/ProfileContacts/ProfileContacts.module.scss?defc","Components/Profile/ProfileInfo/UserProfile/ProfileContacts/ProfileContact.jsx","Components/Profile/ProfileInfo/UserProfile/ProfileData/ProfileData.jsx","Components/Profile/ProfileInfo/UserProfile/ProfileData/ProfileDataForm.jsx","webpack://social_network_react/./src/Components/Profile/ProfileInfo/UserProfile/ProfilePhoto/ProfilePhoto.module.scss?2597","Components/Profile/ProfileInfo/UserProfile/ProfilePhoto/ProfilePhoto.jsx","Components/Profile/ProfileInfo/UserProfile/UserProfile.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network_react/./src/Components/Profile/MyPosts/MyPosts.module.scss?ba8b","webpack://social_network_react/./src/Components/Profile/MyPosts/Post/Post.module.scss?e644","Components/Profile/MyPosts/Post/Post.jsx","webpack://social_network_react/./src/Components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.module.scss?f469","Components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","HOC/WhisRouter.js","HOC/WithAuthRedirect.js","Utils/Validators/Validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__SvXFt\",\"error\":\"FormsControl_error__snvDT\",\"field\":\"FormsControl_field__Gomwz\"};","import classes from './FormsControl.module.scss'\r\nimport { Field } from 'redux-form'\r\nimport React from 'react'\r\n\r\n\r\nexport const FormControl = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error\r\n  \r\n  return (<div className = { `${ classes.formControl } ${ hasError\r\n      ? classes.error\r\n      : '' }` }>\r\n    { children }\r\n    { hasError && <span>{ error }</span> }</div>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n  return < FormControl { ...props }><input { ...props.input } { ...props } /></FormControl>\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  return < FormControl { ...props }><textarea { ...props.input } { ...props } /></FormControl>\r\n}\r\n\r\nexport const createField = (component, name, placeholder, validators, props = {}, text = '') => {\r\n  return <div className = { classes.field }>\r\n    <Field component = { component }\r\n        name = { name }\r\n        placeholder = { placeholder }\r\n        validate = { validators }\r\n        { ...props } />{ text && <span>{ text }</span> }\r\n  </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Profile_wrapper__xqYsR\"};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__vI++W\",\"user\":\"ProfileInfo_user__P1wVM\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserProfile_wrapper__OpiEx\",\"user\":\"UserProfile_user__6UgnX\",\"description\":\"UserProfile_description__9C8qi\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProfileStatus_wrapper__RV2Py\",\"status\":\"ProfileStatus_status__2x+He\"};","import classes from './ProfileStatus.module.scss'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus }) => {\r\n  \r\n  let [ editMod, setEditMod ] = useState(false)\r\n  const activateEditMode = () => {\r\n    setEditMod(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMod(false)\r\n    updateUserStatus(newStatus)\r\n  }\r\n  \r\n  let [ newStatus, setStatus ] = useState(status)\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    setStatus(status)\r\n  }, [ status ])\r\n  \r\n  return (<div className = { classes.wrapper }>\r\n    <div className = { classes.status }>\r\n      <b>Status:</b>\r\n      { !editMod && <span\r\n          onDoubleClick = { activateEditMode }>{ newStatus || 'No status' }</span> }\r\n      { editMod && <input onChange = { onStatusChange }\r\n          onBlur = { deactivateEditMode }\r\n          autoFocus = { true } value = { newStatus } /> }\r\n    </div>\r\n  </div>)\r\n}\r\nexport default ProfileStatus","// extracted by mini-css-extract-plugin\nexport default {\"profileData\":\"ProfileData_profileData__DmBR3\",\"button\":\"ProfileData_button__2zb27\",\"contactsBody\":\"ProfileData_contactsBody__Cb3kg\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactsBody\":\"ProfileContacts_contactsBody__3K3h7\",\"contact\":\"ProfileContacts_contact__29K41\"};","import classes from './ProfileContacts.module.scss'\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n      contactValue && <div className = { classes.contact }>\r\n        <b>{ contactTitle }: </b>{ contactValue }</div>\r\n  )\r\n}\r\nexport default Contact","import classes from './ProfileData.module.scss'\r\nimport Contact from '../ProfileContacts/ProfileContact.jsx'\r\nimport Button from '../../../../Common/Buttons/Button.jsx'\r\n\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n      <div>\r\n        { isOwner && <div className = { classes.profileData }>\r\n          <div className = { classes.button } onClick = { goToEditMode }>\r\n            <Button onClick = { goToEditMode } text = 'Edit' /></div>\r\n        </div> }\r\n        <div className = { classes.name }><b>My Name:</b>{ profile.fullName }\r\n        </div>\r\n        <div className = { classes.aboutMe }><b>About me:</b>{ profile.aboutMe }\r\n        </div>\r\n        <div className = { classes.job }><b>Looking for a\r\n          job:</b>{ profile.lookingForAJob\r\n            ? 'yes'\r\n            : 'no' }</div>\r\n        { profile.lookingForAJob &&\r\n            <div className = { classes.jobDescription }><b>My\r\n              professionals skills:</b>{ profile.lookingForAJobDescription }\r\n            </div> }\r\n        <div className = { classes.contacts }>\r\n          <b>Contacts:</b>\r\n          <div className = { classes.contactsBody }>\r\n            { Object.keys(profile.contacts).map(key => {\r\n              return (\r\n                  <Contact contactTitle = { key } key = { key }\r\n                      contactValue = { profile.contacts[ key ] } />)\r\n            }) }\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProfileData","import classes from './ProfileData.module.scss'\r\nimport { maxLengthCreator, requiredField } from '../../../../../Utils/Validators/Validators.js'\r\nimport { createField, Input, Textarea } from '../../../../Common/FormsControls/FormsControls.jsx'\r\nimport { reduxForm } from 'redux-form'\r\nimport React from 'react'\r\nimport Button from '../../../../Common/Buttons/Button.jsx'\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n  return <form onSubmit = { handleSubmit }>\r\n    <div className = { classes.button }><Button text='Save'/></div>\r\n    { error &&\r\n        <div className = { classes.loginError }>{ error }</div> }\r\n    <div className = { classes.name }><b>My\r\n      Name:</b>\r\n      { createField(Input, 'fullName', 'Your name', [ requiredField,\r\n        maxLength10 ]) }\r\n    </div>\r\n    <div className = { classes.aboutMe }><b>About me:</b>\r\n      { createField(Textarea, 'aboutMe', 'about me...', [\r\n        maxLength30 ]) }\r\n    </div>\r\n    <div className = { classes.job }><b>Looking for a job:</b>\r\n      { createField(Input, 'lookingForAJob', '', [], { type: 'checkbox' }, 'yes') }\r\n    </div>\r\n    \r\n    <div className = { classes.jobDescription }><b>My professionals\r\n      skills:</b>\r\n      { createField(Textarea, 'lookingForAJobDescription', 'you professionals skills...', [\r\n        requiredField, maxLength30 ]) }\r\n    </div>\r\n    <div className = { classes.contacts }>\r\n      <b>Contacts:</b>\r\n      <div className = { classes.contactsBody }>\r\n        { Object.keys(profile.contacts).map(key => {\r\n          return (\r\n              <div key = { key }>\r\n                <b>{ key }:</b> { createField(Input, 'contacts.' + key, key, []) }\r\n              </div>)\r\n        }) }\r\n      </div>\r\n    </div>\r\n  </form>\r\n}\r\nexport const ProfileDataFormRedux = reduxForm({\r\n  form: 'Profile',\r\n})(ProfileDataForm)","// extracted by mini-css-extract-plugin\nexport default {\"photoContainer\":\"ProfilePhoto_photoContainer__UtGAp\",\"photo\":\"ProfilePhoto_photo__k4+oV\",\"uploadPhoto\":\"ProfilePhoto_uploadPhoto__254hW\",\"input_file\":\"ProfilePhoto_input_file__Bbpgv\"};","import classes from './ProfilePhoto.module.scss'\r\nimport userPhoto from '../../../../../assets/image/User.png'\r\n\r\n\r\nconst ProfilePhoto = ({ photos, isOwner, updatePhoto }) => {\r\n  const mainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      updatePhoto(e.target.files[ 0 ])\r\n    }\r\n  }\r\n  \r\n  return (\r\n      <div className = { classes.photoContainer }>\r\n        { photos.large\r\n            ? <div className = { classes.photo }><img src = { photos.large } />\r\n            </div>\r\n            : <div className = { classes.photo }><img\r\n                src = { userPhoto } alt = 'photo' />\r\n            </div> }\r\n        { isOwner &&\r\n            <div className = { classes.uploadPhoto }>\r\n              <input type = 'file' name = 'file' id = 'file'\r\n                  className = { classes.input_file }\r\n                  onChange = { mainPhotoSelected } />\r\n              <label htmlFor = 'file'>\r\n                <span>Add photo...</span>\r\n              </label>\r\n            </div> }\r\n      </div>\r\n  )\r\n}\r\nexport default ProfilePhoto","import classes from './UserProfile.module.scss'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus.jsx'\r\nimport ProfileData from './ProfileData/ProfileData.jsx'\r\nimport { ProfileDataFormRedux } from './ProfileData/ProfileDataForm.jsx'\r\nimport ProfilePhoto from './ProfilePhoto/ProfilePhoto.jsx'\r\n\r\n\r\nconst UserProfile = ({ profile, isOwner, status, editMod, setEditMod, updatePhoto, updateUserStatus, saveProfile }) => {\r\n  \r\n  const onSubmitProfile = (formData) => {\r\n    saveProfile(formData)\r\n  }\r\n  \r\n  return (<div className = { classes.wrapper }>\r\n    <div className = { classes.user }>\r\n      <ProfilePhoto photos = { profile.photos } isOwner = { isOwner }\r\n          updatePhoto = { updatePhoto } />\r\n      \r\n      <div className = { classes.description }>\r\n        { editMod\r\n            ? <ProfileDataFormRedux initialValues = { profile }\r\n                profile = { profile }\r\n                onSubmit = { onSubmitProfile } />\r\n            : <ProfileData profile = { profile } isOwner = { isOwner }\r\n                goToEditMode = { () => {\r\n                  setEditMod(true)\r\n                } } /> }\r\n        <ProfileStatus status = { status }\r\n            updateUserStatus = { updateUserStatus } />\r\n      </div>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default UserProfile\r\n","import classes from './ProfileInfo.module.scss'\r\nimport UserProfile from './UserProfile/UserProfile'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, isOwner, editMod, setEditMod, updateUserStatus, updatePhoto, saveProfile }) => {\r\n  if(!profile) {\r\n    return <Preloader />\r\n  } else {\r\n    return <div className = { classes.wrapper }>\r\n      <div className = { classes.image }>\r\n        <img\r\n            src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQWw6w8pfYT_ZJIxoqIWhmnau25x1peTvVv6Q&usqp=CAU'\r\n        />\r\n      </div>\r\n      <UserProfile profile = { profile }\r\n          status = { status }\r\n          updateUserStatus = { updateUserStatus }\r\n          isOwner = { isOwner }\r\n          updatePhoto = { updatePhoto }\r\n          saveProfile = { saveProfile }\r\n          editMod = { editMod } setEditMod = { setEditMod }\r\n      />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ProfileInfo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyPosts_wrapper__99ooj\",\"posts\":\"MyPosts_posts__a3cev\",\"post_new\":\"MyPosts_post_new__ZZVMw\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Post_wrapper__D7uS3\",\"avatar\":\"Post_avatar__Wgdi8\",\"body\":\"Post_body__L3WJj\",\"likes\":\"Post_likes__j4SCH\"};","import classes from './Post.module.scss'\r\nimport cat from '../../../../assets/image/cat.jpg'\r\n\r\nconst Post = (props) => {\r\n  return (<div className = { classes.wrapper }>\r\n    <div className = { classes.avatar }>\r\n      <img\r\n          src = { cat }\r\n          alt = 'ava'\r\n      />\r\n    </div>\r\n    <div className = { classes.body }>{ props.text }</div>\r\n    <div className = { classes.likes }>\r\n      <span>like</span>\r\n      <span>{ props.like }</span>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default Post\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postNew\":\"AddNewPostForm_postNew__uq7NP\",\"button\":\"AddNewPostForm_button__nhkzk\"};","import classes from './AddNewPostForm.module.scss'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from '../../../../Utils/Validators/Validators.js'\r\nimport { Textarea } from '../../../Common/FormsControls/FormsControls.jsx'\r\nimport Button from '../../../Common/Buttons/Button.jsx'\r\n\r\n\r\nconst maxLength30 = maxLengthCreator (30)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit = { props.handleSubmit } className = { classes.postNew }>\r\n        <div>\r\n          <Field component = { Textarea }\r\n              validate = { [ requiredField, maxLength30 ] }\r\n              name = 'newPostText'\r\n              placeholder = 'my post...' />\r\n        </div>\r\n        <div className={classes.button}>\r\n          <Button text='Send'/>\r\n        </div>\r\n      </form>)\r\n}\r\n\r\nconst PostFormRedux = reduxForm ({\r\n  form: 'newPostText',\r\n}) (AddNewPostForm)\r\n\r\nexport default PostFormRedux\r\n","import classes from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport PostFormRedux from './AddNewPostForm/AddNewPostForm.jsx'\r\nimport React from 'react'\r\n\r\n\r\nconst MyPosts = React.memo (({posts,addPost}) => {\r\n  \r\n  let postElement = posts.map (p => (<Post\r\n      text = { p.text }\r\n      like = { p.likeCount }\r\n      key = { p.id } />))\r\n  \r\n  let onAddPost = (value) => {\r\n    addPost (value.newPostText)\r\n  }\r\n  \r\n  return (<div className = { classes.wrapper }>\r\n    <h3>My posts</h3>\r\n    <PostFormRedux onSubmit = { onAddPost } />\r\n    <div className = { classes.posts }>\r\n      { postElement }\r\n    </div>\r\n  </div>)\r\n})\r\n\r\nexport default MyPosts\r\n","import { addPost } from '../../../Redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nexport default connect (mapStateToProps, {\r\n  addPost,\r\n}) (MyPosts)\r\n\r\n","import classes from './Profile.module.scss'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\n\r\nconst Profile = ({ profile, status,updateUserStatus,isOwner,updatePhoto,editMod,setEditMod,saveProfile}) => {\r\n  return (<div className = { classes.wrapper }>\r\n    <ProfileInfo profile = { profile } status = { status }\r\n        updateUserStatus = { updateUserStatus } editMod={editMod} setEditMod = { setEditMod }\r\n        isOwner = { isOwner } updatePhoto={updatePhoto} saveProfile={saveProfile}\r\n    />\r\n    <MyPostsContainer />\r\n  </div>)\r\n}\r\n\r\nexport default Profile\r\n","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getUserStatus, updateUserStatus, updatePhoto, saveProfile, setEditMod } from '../../Redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect.js'\r\nimport { withRouter } from '../../HOC/WhisRouter.js'\r\n\r\n\r\nconst ProfileContainer = ({\r\n  profile, status, autorizedUserId, updatePhoto,\r\n  getUserProfile, getUserStatus, match, saveProfile, editMod, setEditMod,\r\n}) => {\r\n  \r\n  useEffect(() => {\r\n    let userId = match\r\n        ? match.params.userId\r\n        : autorizedUserId\r\n    getUserProfile(userId)\r\n    getUserStatus(userId)\r\n  }, [ match, autorizedUserId ])\r\n  \r\n  return <Profile profile = { profile }\r\n      status = { status }\r\n      updateUserStatus = { updateUserStatus }\r\n      isOwner = { !match }\r\n      updatePhoto = { updatePhoto }\r\n      saveProfile = { saveProfile }\r\n      editMod = { editMod }\r\n      setEditMod = { setEditMod }\r\n  />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  editMod: state.profilePage.editMod,\r\n})\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  updatePhoto,\r\n  saveProfile,\r\n  setEditMod,\r\n}), withAuthRedirect)(ProfileContainer)","import { useMatch } from 'react-router'\r\n\r\n\r\nexport const withRouter = (Component) => {\r\n  return (props) => {\r\n    const match = useMatch ('/profile/:userId/')\r\n    return <Component { ...props } match = { match } />\r\n  }\r\n}","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  let RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to = '/login' />\r\n    }\r\n    return <Component { ...props } />\r\n  }\r\n  \r\n  return connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n}","export const requiredField = (value) => {\r\n  if (value) {\r\n    return undefined\r\n  }\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) {\r\n    return `Max length is ${ maxLength } symbols`\r\n  }\r\n  return undefined\r\n}"],"names":["FormControl","meta","touched","error","children","hasError","className","classes","Input","props","input","Textarea","createField","component","name","placeholder","validators","text","Field","validate","status","updateUserStatus","useState","editMod","setEditMod","newStatus","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","autoFocus","contactTitle","contactValue","profile","isOwner","goToEditMode","onClick","Button","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","maxLength10","maxLengthCreator","maxLength30","ProfileDataFormRedux","reduxForm","form","handleSubmit","onSubmit","requiredField","type","photos","updatePhoto","large","src","userPhoto","alt","id","target","files","length","htmlFor","saveProfile","initialValues","formData","Preloader","cat","like","React","posts","addPost","postElement","p","likeCount","newPostText","connect","state","profilePage","MyPosts","MyPostsContainer","compose","Component","match","useMatch","autorizedUserId","auth","userId","getUserProfile","getUserStatus","withAuthRedirect","params","mapStateToPropsForRedirect","isAuth","to","maxLength"],"sourceRoot":""}